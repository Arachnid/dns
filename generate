// Packs an A record into msg[off:].
// See PackDomainName for documentation about the compression.
func (a *A) Pack(msg []byte, off int, compression map[string]int, compress bool) (off1 int, err error) {
	off, err = packHeader(a.Hdr, msg, off, compression, compress)
	if err != nil {
		return off, err
	}
	off, err = packIPv4(a.A, msg, off)
	return off, err
}

// Unpacks the IP stored in an A record.
func unpackIPv4(a *net.IP, msg []byte, off int) (off1 int, err error) {
	lenmsg := len(msg)
	if off == lenmsg {
		return off, nil // dyn. update
	}
	if off+net.IPv4len > lenmsg {
		return lenmsg, &Error{err: "overflow unpacking a"}
	}
	*a = net.IPv4(msg[off], msg[off+1], msg[off+2], msg[off+3])
	off += net.IPv4len
	return off, nil
}
